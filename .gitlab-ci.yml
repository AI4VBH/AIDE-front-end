
include:
  - /.gitlab/templates/.service.yml

variables:
  PROJECT_ROOT: "./"
  SERVICE: aide-frontend
  DOCKER_DRIVER: overlay2
  GIT_DEPTH: 1

cache:
    - paths:
        - "/node_modules"


check build integrity:
    stage: check-build-integrity
    image: ${CI_DEPENDENCY_PROXY_DIRECT_GROUP_IMAGE_PREFIX}/node:14
    before_script:
        - npm ci
    script:
        - npm run build

lint:
    stage: lint
    image: ${CI_DEPENDENCY_PROXY_DIRECT_GROUP_IMAGE_PREFIX}/node:14
    before_script:
        - npm ci
    script:
        - ls -l
        - npx eslint './src/**/*.ts' -f json -o ./eslint.json || exit 0
    artifacts:
        paths:
            - eslint.json
    only:
        - merge_requests

test ui headless:
    # Cache modules in between jobs
    cache:
        key: $CI_COMMIT_REF_SLUG
        paths:
            - .npm/

    stage: test-ui-integration
    image:
        name: ${CI_DEPENDENCY_PROXY_DIRECT_GROUP_IMAGE_PREFIX}/cypress/included:8.3.1
        entrypoint: [""]
    needs: []
    before_script:
        - export VUE_APP_AUTH_ENABLED=false
        - npm ci --cache .npm --prefer-offline
    script:
        - npm run tests:ui_ci
    after_script:
        - cp -r $CI_PROJECT_DIR/cypress/videos ci_artifacts/
        - cp -r $CI_PROJECT_DIR/cypress/screenshots ci_artifacts/
    artifacts:
        name: "$CI_JOB_STAGE-$CI_COMMIT_REF_NAME"
        paths:
            - ci_artifacts/
            - cypress-visual-report/
            - cypress-visual-screenshots/
        when: always
    only:
        - merge_requests

sonarqube-check:
    stage: sast
    image:
        name: ${CI_DEPENDENCY_PROXY_DIRECT_GROUP_IMAGE_PREFIX}/sonarsource/sonar-scanner-cli:latest
        entrypoint: [""]
    variables:
        SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
        GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
    cache:
        key: "${CI_JOB_NAME}"
        paths:
        - .sonar/cache
    script:
        - sonar-scanner
    dependencies:
        - lint
    allow_failure: true
    only:
        - merge_requests
        - master # or the name of your main branch

create_pacts:
    stage: contracts
    image: ${CI_DEPENDENCY_PROXY_DIRECT_GROUP_IMAGE_PREFIX}/node:14
    needs: []
    before_script:
      - npm ci --cache .npm --prefer-offline
    script:
      - npm run tests:consumer
    artifacts:
        name: "$CI_JOB_STAGE-$CI_COMMIT_REF_NAME"
        paths:
            - pact/pacts/
        when: always
    only:
      - merge_requests

publish_pacts:
    stage: contracts
    image: ${CI_DEPENDENCY_PROXY_DIRECT_GROUP_IMAGE_PREFIX}/node:14
    needs: ["create_pacts"]
    before_script:
      - npm ci --cache .npm --prefer-offline
      - export PACT_BROKER_USERNAME=broker
      - export PACT_BROKER_PASSWORD=Password01!
    script:
      - npm run pact:publish
    dependencies:
      - create_pacts
    only:
      - merge_requests