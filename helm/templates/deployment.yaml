{{ if .Values.image -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "deploy.fullname" . }}
  labels:
    {{- include "deploy.labels" . | nindent 4 }}
spec:
  {{- if not ((.Values.autoscaling).enabled) }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "deploy.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "deploy.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{ if ((.Values.serviceAccount).create) -}}
      serviceAccountName: {{ include "deploy.serviceAccountName" . }}
      {{- end}}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
    
      {{- with .Values.volumes }}
      volumes:
       {{- range ($.Values.volumes) }}
        - name: {{ .name }}
        {{- if .configMap }}
          configMap:
          {{- toYaml .configMap | nindent 12 }}
          {{- end }}
        {{- if .secret }}
          secret:
            secretName: {{ .secret.secretName}}
          {{- end }}
        {{- if .claimName }}
          persistentVolumeClaim:
            claimName: {{  .claimName }}
        {{- end }}
      {{- end }}      
      {{- end }}

      
      
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}    
          {{- if .Values.enviromentVariables }}
          env:
              {{- range $name, $value := .Values.enviromentVariables }}
            - name: {{ $name }}
              value: {{ $value | quote }}
              {{- end }}
        
              {{- range (.Values.enviromentVariablesFromSecrets).secrets }}
            - name: {{ .name }}
              valueFrom:
                secretKeyRef:
                  name: {{ .secretName}}
                  key: {{ .secretKey}}
              {{- end }} 
        
          {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
                    {{- if .Values.service.port2 }}
            - name: service-console
              containerPort: {{ .Values.service.port2 }}
      {{- end}}
      
          {{- if  .Values.image.command }}
          command: {{.Values.image.command}}
          {{- end}}
          {{- if  .Values.image.args }}
          args: {{.Values.image.args}}
          {{- end}}
          {{- with .Values.probes }}
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          {{- end }}
          
          
          {{- with .Values.volumeMounts }}
          volumeMounts:
            {{- range ($.Values.volumeMounts) }}
             - name: {{  .name }}
               mountPath: {{  .mountPath }}
               
            {{- end }} 
           {{- end }} 

          
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
