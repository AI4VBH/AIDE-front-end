image: "python:3.9.5"

include:
  - /.gitlab/templates/.cr.yml

stages:
  - sast
  - build
  - test_ui_integration
  - build-image
  - deploy

deploy dev:
  stage: deploy
  image: registry.gitlab.com/gitlab-org/cloud-deploy/aws-base:latest
  script:
    - apt update
    - apt -y install openssh-server
    - export AWS_ACCESS_KEY_ID=$DEV_AWS_ACCESS_KEY
    - export AWS_SECRET_ACCESS_KEY=$DEV_AWS_SECRET_KEY
    - aws configure set region eu-west-2
    - mkdir -p ~/.ssh
    - aws secretsmanager get-secret-value --secret-id $DEV_ANSIBLE_CONTROL_KEY --query SecretString --output text > ~/.ssh/$DEV_ANSIBLE_CONTROL_KEY
    - chmod 400 ~/.ssh/$DEV_ANSIBLE_CONTROL_KEY
    - echo -e "\nIdentityFile ~/.ssh/$DEV_ANSIBLE_CONTROL_KEY" >> ~/.ssh/config
    - ssh-keyscan -H $DEV_ANSIBLE_CONTROL_IP >> ~/.ssh/known_hosts
    - export EXTRA_VARS="\"DOCKER_TAG=$CI_COMMIT_BRANCH SERVICE_NAME=$SERVICE_NAME DOCKER_REGISTRY=$DOCKER_REGISTRY DOCKER_IMAGE=$DOCKER_IMAGE DOCKER_USER=$DOCKER_USER DOCKER_TOKEN=$DOCKER_TOKEN PORTS=$PORTS OVERLAY_NETWORK=$OVERLAY_NETWORK\""
    - ssh ubuntu@$DEV_ANSIBLE_CONTROL_IP "sudo aws s3 cp s3://ansible-tools-$DEV_ANSIBLE_TOOLS_BUCKET/ansible-schedule-ubuntu.sh /home/ubuntu; sudo dos2unix /home/ubuntu/ansible-schedule-ubuntu.sh; sudo chmod +x /home/ubuntu/ansible-schedule-ubuntu.sh; sudo /home/ubuntu/ansible-schedule-ubuntu.sh -v $EXTRA_VARS -p deploy-service.yml create dev"
  only:
    - develop

deploy branch:
  stage: deploy
  image: registry.gitlab.com/gitlab-org/cloud-deploy/aws-base:latest
  script:
    - apt update
    - apt -y install openssh-server
    - export AWS_ACCESS_KEY_ID=$DEV_AWS_ACCESS_KEY
    - export AWS_SECRET_ACCESS_KEY=$DEV_AWS_SECRET_KEY
    - aws configure set region eu-west-2
    - mkdir -p ~/.ssh
    - aws secretsmanager get-secret-value --secret-id $DEV_ANSIBLE_CONTROL_KEY --query SecretString --output text > ~/.ssh/$DEV_ANSIBLE_CONTROL_KEY
    - chmod 400 ~/.ssh/$DEV_ANSIBLE_CONTROL_KEY
    - echo -e "\nIdentityFile ~/.ssh/$DEV_ANSIBLE_CONTROL_KEY" >> ~/.ssh/config
    - ssh-keyscan -H $DEV_ANSIBLE_CONTROL_IP >> ~/.ssh/known_hosts
    - export EXTRA_VARS="\"DOCKER_TAG=$CI_COMMIT_BRANCH SERVICE_NAME=$SERVICE_NAME DOCKER_REGISTRY=$DOCKER_REGISTRY DOCKER_IMAGE=$DOCKER_IMAGE DOCKER_USER=$DOCKER_USER DOCKER_TOKEN=$DOCKER_TOKEN PORTS=$PORTS OVERLAY_NETWORK=$OVERLAY_NETWORK\""
    - ssh ubuntu@$DEV_ANSIBLE_CONTROL_IP "sudo aws s3 cp s3://ansible-tools-$DEV_ANSIBLE_TOOLS_BUCKET/ansible-schedule-ubuntu.sh /home/ubuntu; sudo dos2unix /home/ubuntu/ansible-schedule-ubuntu.sh; sudo chmod +x /home/ubuntu/ansible-schedule-ubuntu.sh; sudo /home/ubuntu/ansible-schedule-ubuntu.sh -v $EXTRA_VARS -p deploy-service.yml create dev"
  when:
    - manual

deploy sit:
  stage: deploy
  image: registry.gitlab.com/gitlab-org/cloud-deploy/aws-base:latest
  script:
    - echo $SIT_ANSIBLE_CONTROL_KEY
    - echo $SIT_ANSIBLE_CONTROL_IP
    - apt update
    - apt -y install openssh-server
    - export AWS_ACCESS_KEY_ID=$SIT_AWS_ACCESS_KEY
    - export AWS_SECRET_ACCESS_KEY=$SIT_AWS_SECRET_KEY
    - aws configure set region eu-west-2
    - mkdir -p ~/.ssh
    - aws secretsmanager get-secret-value --secret-id $SIT_ANSIBLE_CONTROL_KEY --query SecretString --output text > ~/.ssh/$SIT_ANSIBLE_CONTROL_KEY
    - chmod 400 ~/.ssh/$SIT_ANSIBLE_CONTROL_KEY
    - echo -e "\nIdentityFile ~/.ssh/$SIT_ANSIBLE_CONTROL_KEY" >> ~/.ssh/config
    - ssh-keyscan -H $SIT_ANSIBLE_CONTROL_IP >> ~/.ssh/known_hosts
    - export EXTRA_VARS="\"DOCKER_TAG=$CI_COMMIT_BRANCH SERVICE_NAME=$SERVICE_NAME DOCKER_REGISTRY=$DOCKER_REGISTRY DOCKER_IMAGE=$DOCKER_IMAGE DOCKER_USER=$DOCKER_USER DOCKER_TOKEN=$DOCKER_TOKEN PORTS=$PORTS OVERLAY_NETWORK=$OVERLAY_NETWORK\""
    - ssh ubuntu@$SIT_ANSIBLE_CONTROL_IP "sudo aws s3 cp s3://ansible-tools-$SIT_ANSIBLE_TOOLS_BUCKET/ansible-schedule-ubuntu.sh /home/ubuntu; sudo dos2unix /home/ubuntu/ansible-schedule-ubuntu.sh; sudo chmod +x /home/ubuntu/ansible-schedule-ubuntu.sh; sudo /home/ubuntu/ansible-schedule-ubuntu.sh -v $EXTRA_VARS -p deploy-service.yml create sit"
  only:
    - main
    - /^release-.*$/

deploy uat:
  stage: deploy
  image: registry.gitlab.com/gitlab-org/cloud-deploy/aws-base:latest
  script:
    - echo $UAT_ANSIBLE_CONTROL_KEY
    - echo $UAT_ANSIBLE_CONTROL_IP
    - apt update
    - apt -y install openssh-server
    - export AWS_ACCESS_KEY_ID=$UAT_AWS_ACCESS_KEY
    - export AWS_SECRET_ACCESS_KEY=$UAT_AWS_SECRET_KEY
    - aws configure set region eu-west-2
    - mkdir -p ~/.ssh
    - aws secretsmanager get-secret-value --secret-id $UAT_ANSIBLE_CONTROL_KEY --query SecretString --output text > ~/.ssh/$UAT_ANSIBLE_CONTROL_KEY
    - chmod 400 ~/.ssh/$UAT_ANSIBLE_CONTROL_KEY
    - echo -e "\nIdentityFile ~/.ssh/$UAT_ANSIBLE_CONTROL_KEY" >> ~/.ssh/config
    - ssh-keyscan -H $UAT_ANSIBLE_CONTROL_IP >> ~/.ssh/known_hosts
    - export EXTRA_VARS="\"DOCKER_TAG=$CI_COMMIT_BRANCH SERVICE_NAME=$SERVICE_NAME DOCKER_REGISTRY=$DOCKER_REGISTRY DOCKER_IMAGE=$DOCKER_IMAGE DOCKER_USER=$DOCKER_USER DOCKER_TOKEN=$DOCKER_TOKEN PORTS=$PORTS OVERLAY_NETWORK=$OVERLAY_NETWORK\""
    - ssh ubuntu@$UAT_ANSIBLE_CONTROL_IP "sudo aws s3 cp s3://ansible-tools-$UAT_ANSIBLE_TOOLS_BUCKET/ansible-schedule-ubuntu.sh /home/ubuntu; sudo dos2unix /home/ubuntu/ansible-schedule-ubuntu.sh; sudo chmod +x /home/ubuntu/ansible-schedule-ubuntu.sh; sudo /home/ubuntu/ansible-schedule-ubuntu.sh -v $EXTRA_VARS -p deploy-service.yml create uat"
  rules:
      - if: '$CI_PIPELINE_SOURCE == "web" && ($CI_COMMIT_BRANCH == "main" || $CI_COMMIT_BRANCH =~ /^release-.*$/)'
        when: always
